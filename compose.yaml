version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: miausociau-db
    environment:
      POSTGRES_DB: miausocial
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: senhasegura123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - miaunet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d miausocial"]
      interval: 10s
      timeout: 5s
      retries: 5

  springboot-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: miausociau-app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/miausocial
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: senhasegura123
      JWT_SECRET: your-256-bit-secret-key-here-for-development-only
      AWS_BUCKET_NAME: dev-bucket
      AWS_REGION: sa-east-1
      AWS_ACCESS_KEY: dev-access-key
      AWS_SECRET_KEY: dev-secret-key
    networks:
      - miaunet

  mongodb:
    image: mongo:latest
    container_name: miausociau-mongo
    environment:
      MONGO_INITDB_DATABASE: mydatabase
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - "27017:27017"
    networks:
      - miaunet
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: miausociau-redis
    ports:
      - "6379:6379"
    networks:
      - miaunet
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  miaunet:
    driver: bridge
